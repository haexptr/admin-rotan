<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Absensi extends Model
{
    use HasFactory;

    protected $table = 'absensis';
    protected $primaryKey = 'id_absensi';

    protected $fillable = [
        'tanggal',
        'hadir',
        'tidak_hadir',
        'izin',
        'id_karyawan',
        'is_auto_generated',
        'batch_type',
        'batch_id'
    ];

    protected $casts = [
        'tanggal' => 'date',
        'hadir' => 'boolean',
        'tidak_hadir' => 'boolean',
        'izin' => 'boolean',
        'is_auto_generated' => 'boolean'
    ];

    // Relationships
    public function karyawan()
    {
        return $this->belongsTo(Karyawan::class, 'id_karyawan', 'id_karyawan');
    }

    public function gajis()
    {
        return $this->hasMany(Gaji::class, 'id_absensi', 'id_absensi');
    }

    // Scopes for filtering
    public function scopeByDate($query, $date)
    {
        return $query->whereDate('tanggal', $date);
    }

    public function scopeAutoGenerated($query)
    {
        return $query->where('is_auto_generated', true);
    }

    public function scopeManual($query)
    {
        return $query->where('is_auto_generated', false);
    }

    public function scopeByBatchType($query, $type)
    {
        return $query->where('batch_type', $type);
    }

    // Accessors
    public function getStatusAttribute()
    {
        if ($this->tidak_hadir) return 'tidak_hadir';
        if ($this->izin) return 'izin';
        return 'hadir';
    }

    public function getStatusLabelAttribute()
    {
        return match($this->status) {
            'tidak_hadir' => 'Tidak Hadir',
            'izin' => 'Izin',
            default => 'Hadir'
        };
    }

    public function getBatchTypeLabelAttribute()
    {
        return match($this->batch_type) {
            'daily_auto' => 'Auto Generate',
            'bulk_input' => 'Bulk Input',
            default => 'Manual'
        };
    }
}